{"version":3,"sources":["types/Status.ts","features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/Error/Error.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/ButtonModal/ButtonModal.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","actions","todo","type","payload","currentTodoReducer","state","action","Statuses","ALL","ACTIVE","COMPLETED","initialState","query","status","filterReducer","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","Error","children","className","TodoList","dispatch","selectedTodo","sortedTodos","useMemo","title","toLowerCase","includes","completed","length","map","isCurrentTodo","id","classNames","onClick","currTodoActions","TodoFilter","onSubmit","event","preventDefault","value","onChange","e","filterActions","target","currStatus","placeholder","trimStart","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","ButtonModal","Loader","TodoModal","useState","user","setUser","isError","setIsError","isLoading","setIsLoading","getUserFromServer","a","result","useEffect","href","email","name","App","getTodosFromServer","todoActions","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb4ba47c.chunk.js","sourcesContent":["export enum Status {\n  ALL = 'All',\n  ACTIVE = 'Active',\n  COMPLETED = 'Completed',\n}\n\nexport const Statuses = [Status.ALL, Status.ACTIVE, Status.COMPLETED];\n","import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype SetStatusAction = {\n  type: 'filter/SET_STATUS',\n  payload: Status,\n};\n\ntype SetQueryAction = {\n  type: 'filter/SET_QUERY',\n  payload: string,\n};\n\nconst setQueryAction = (query: string): SetQueryAction => ({\n  type: 'filter/SET_QUERY',\n  payload: query,\n});\n\nconst setStatusAction = (status: Status): SetStatusAction => ({\n  type: 'filter/SET_STATUS',\n  payload: status,\n});\n\nconst initialState = {\n  query: '',\n  status: Status.ALL,\n};\n\ntype Action = SetStatusAction | SetQueryAction;\n\nexport const actions = { setStatusAction, setQueryAction };\n\nconst filterReducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case 'filter/SET_STATUS':\n      return { ...state, status: action.payload };\n\n    case 'filter/SET_QUERY':\n      return { ...state, query: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetAction = {\n  type: 'todo/SET',\n  payload: Todo[],\n};\n\nconst setTodos = (todos: Todo[]): SetAction => ({\n  type: 'todo/SET',\n  payload: todos,\n});\n\nexport const actions = { setTodos };\n\nconst todosReducer = (todos: Todo[] = [], action: SetAction): Todo[] => {\n  switch (action.type) {\n    case 'todo/SET':\n      return action.payload;\n\n    default:\n      return todos;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from 'react';\n\nexport const Error: React.FC = ({ children }) => (\n  <p className=\"notification is-warning\">\n    {children}\n  </p>\n);\n","import classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as currTodoActions } from '../../features/currentTodo';\n\nimport { Status } from '../../types/Status';\nimport { Error } from '../Error';\n\nexport const TodoList: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const selectedTodo = useAppSelector(state => state.currentTodo);\n  const { filter, todos } = useAppSelector(state => state);\n\n  const getSortedTodos = () => {\n    const filteredByQuery = todos.filter(({ title }) => (\n      title.toLowerCase().includes(filter.query.toLowerCase())\n    ));\n\n    return filteredByQuery.filter(({ completed }) => {\n      switch (filter.status) {\n        case Status.ACTIVE:\n          return !completed;\n\n        case Status.COMPLETED:\n          return completed;\n\n        default:\n          return true;\n      }\n    });\n  };\n\n  const sortedTodos = useMemo(\n    getSortedTodos, [filter, todos],\n  );\n\n  return (\n    <>\n      {!sortedTodos.length\n        ? (\n          <Error>\n            There are no todos matching current filter criteria\n          </Error>\n        )\n        : (\n          <table className=\"table is-narrow is-fullwidth\">\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>\n                  <span className=\"icon\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </th>\n                <th>Title</th>\n                <th> </th>\n              </tr>\n            </thead>\n            <tbody>\n              {sortedTodos.map((todo) => {\n                const isCurrentTodo = selectedTodo?.id === todo.id;\n\n                return (\n                  <tr\n                    data-cy=\"todo\"\n                    className=\"\"\n                    key={todo.id}\n                  >\n                    <td className=\"is-vcentered\">{todo.id}</td>\n                    <td className=\"is-vcentered\">\n                      {todo.completed && (\n                        <span className=\"icon\" data-cy=\"iconCompleted\">\n                          <i className=\"fas fa-check\" />\n                        </span>\n                      )}\n                    </td>\n                    <td className=\"is-vcentered is-expanded\">\n                      <p className={classNames({\n                        'has-text-danger': !todo.completed,\n                        'has-text-success': todo.completed,\n                      })}\n                      >\n                        {todo.title}\n                      </p>\n                    </td>\n                    <td className=\"has-text-right is-vcentered\">\n                      <button\n                        data-cy=\"selectButton\"\n                        className=\"button\"\n                        type=\"button\"\n                        onClick={() => (\n                          dispatch(currTodoActions.setTodo(todo))\n                        )}\n                      >\n                        <span className=\"icon\">\n                          <i className={classNames(\n                            'far',\n                            {\n                              'fa-eye': !isCurrentTodo,\n                              'fa-eye-slash': isCurrentTodo,\n                            },\n                          )}\n                          />\n                        </span>\n                      </button>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n    </>\n  );\n};\n","import React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as filterActions } from '../../features/filter';\nimport { Status, Statuses } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { status, query } = useAppSelector(state => state.filter);\n\n  const handleChangeStatus = (e: React.ChangeEvent<HTMLSelectElement>) => (\n    dispatch(filterActions.setStatusAction(e.target.value as Status))\n  );\n\n  const handleChangeQuery = (e: React.ChangeEvent<HTMLInputElement>) => (\n    dispatch(filterActions.setQueryAction(e.target.value.trimStart()))\n  );\n\n  const handleClearQuery = () => dispatch(filterActions.setQueryAction(''));\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={handleChangeStatus}\n          >\n            {Statuses.map(currStatus => (\n              <option key={currStatus} value={currStatus}>\n                {currStatus}\n              </option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          value={query}\n          placeholder=\"Search...\"\n          onChange={handleChangeQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={handleClearQuery}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport { useAppDispatch } from '../../app/hooks';\nimport { actions as currTodoActions } from '../../features/currentTodo';\n\nexport const ButtonModal: React.FC = () => {\n  const dispatch = useAppDispatch();\n\n  const handleDeleteTodo = () => {\n    dispatch(currTodoActions.removeTodo());\n  };\n\n  return (\n    // eslint-disable-next-line jsx-a11y/control-has-associated-label\n    <button\n      type=\"button\"\n      className=\"delete\"\n      data-cy=\"modal-close\"\n      onClick={handleDeleteTodo}\n    />\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { ButtonModal } from '../ButtonModal';\nimport { Error } from '../Error';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = todo;\n\n  const getUserFromServer = async () => {\n    try {\n      setIsLoading(true);\n\n      const result = await getUser(userId);\n\n      setUser(result);\n    } catch (error: unknown) {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getUserFromServer();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {isLoading && <Loader />}\n      {isError && (\n        <Error>\n          User not found\n          <ButtonModal />\n        </Error>\n      )}\n\n      {user && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {id}\n            </div>\n\n            <ButtonModal />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n\n              {completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { actions as todoActions } from './features/todos';\nimport { Error } from './components/Error';\n\nexport const App: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const selectedTodo = useAppSelector(state => state.currentTodo);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const getTodosFromServer = async () => {\n    try {\n      setIsLoading(true);\n      const result = await getTodos();\n\n      dispatch(todoActions.setTodos(result));\n    } catch (error: unknown) {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getTodosFromServer();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n\n              {(!isLoading && !isError) && <TodoList />}\n\n              {(!isLoading && isError) && (\n                <Error>\n                  Something went wrong\n                </Error>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && <TodoModal todo={selectedTodo} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}